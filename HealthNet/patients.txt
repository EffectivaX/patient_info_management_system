'prefix', 'first_name','last_name', 'date_of_birth', 'gender','home_address','national_id', 'phone_number', 'email_address', 'purpose_of_visit', 'description_of_the_condition', 'prescription', 'current_temperature', 'blood_type', 'current_medication', 'body_mass', 'allergies', 'employment_status', 'consulted_doctor', 'marital_status', 'medical_aid_group', 'date_of_visit',

first{

      Scott Crumley
      1970-12-13
      Male
      67 Crawford Drive Victoria Falls
      08-2127708X35
      263778613888
      scott_crumley@yahoo.co.uk
      pneumonia
      Chest pain and lower back
      Propain
      41
      O-
      None
      70
      None
      Employed,
      Dr. D Song,
      Divorced,
      Centric Medical,

}

second{

      reyna Finkbeiner
      1965-12-13
      Female
      69 Crawford Drive Victoria Falls
      02-6137708Z02
      263778611238
      reynafinkbeiner01@outlook.com
      HIV Test
      CD4 Count is stable
      Vegan Diet
      38
      AB
      None
      70
      None
      Employed,
      Dr. D Vincent,
      Separated,
      Centric Medical,

}

third{

      full_name : reyna Finkbeiner
      dob: 1965-12-13
      gender : Female
      home_address : 69 Crawford Drive Victoria Falls
      id_number : 02-6137708Z02
      phone_number : 263778611238
      Email : reynafinkbeiner01@outlook.com
      Reason : HIV Test
      Description : CD4 Count is stable
      prescrition : Vegan Diet
      Temp : 38
      Blood_Type : AB
      Curr_Med : None
      Body_Mass : 70
      Allergies : None
      Emp_Status : Employed,
      Doctor : Dr. D Vincent,
      MArital_Status : Separated,
      Medical_Aid : Centric Medical,

}

Margit Finnie F
Reagan Harville F
Elise Rickett F
Lourie Gurrola F
Jodi Lambson F
Cathey Roiger F
Freddy Linsey M
Kacy Somers F
Lynna Lehrman F
Brice Edgerly M
Detra Mounce F
Shelia Poll F
Analisa Testa F
Beatris Diego F
Myrtie Dauer F
Kendall Margolis M
Christen Deramus F
Delisa Voges F
Krystal Pesola F
Amal Berke F
Ena Baltes F
Lashanda Chiou F
Neida Pompa F
Kazuko Dimmick F
Jolyn Pittenger F
Geraldo Ewin M
Ellen Loiselle F
Leatha Bugbee F
Mina Crider F
Lilli Hemmings F
Deborah Latson F
Krysta Kile F
Dennis Caple M
Adele Orlando F
Raul Valley M
Claribel Hau F
Abel Eckart M
Gabriel Ashbaugh M
Hortencia Sypher F
Galina Brungardt F
Louis Honaker M

# Adding a new patient using a form named PatientForm()
@login_required
def new_patient(request):
    patient_form = PatientForm()
    if request.method == 'POST':
        patient_form = PatientForm(request.POST)
        if patient_form.is_valid():
            patient_form.save()
            return HttpResponseRedirect('/HealthNet/')

    else:
        form = PatientForm()

    context = {
        'form': patient_form,
        'title': "Add New Patient",
        'project_name' : 'ProMed HealthNet Inc',
        'creator' : 'Andile XeroxZen',
        'purpose' : 'Patient Information Management System'
    }

    return render(request, 'HealthNet/add_patient.html', context)


        # def __init__(self, *args, **kwargs):
        #     super().__init__(*args, **kwargs)
        #
        #     self.helper = FormHelper
        #     self.helper.form_method = 'post'
        #
        #     self.helper.layout = Layout(
        #         'prefix',
        #         'first_name',
        #         'last_name',
        #         'date_of_birth',
        #         'gender',
        #         'home_address',
        #         'phone_number',
        #         'national_id',
        #         'email_address',
        #         'purpose_of_visit',
        #         'description_of_the_condition',
        #         'prescription',
        #         'current_temperature',
        #         'blood_type',
        #         'current_medication',
        #         'body_mass',
        #         'allergies',
        #         'employment_status',
        #         'consulted_doctor',
        #         'marital_status',
        #         'medical_aid_group',
        #         'date_of_visit',
        #         Submit('submit', 'Submit', css_class='btn waves-effect hoverable green lighten-1 center')
        #         # Reset('reset', 'Reset', css_class='btn-danger')



        patient.prefix = form.cleaned_data.get('prefix')
        patient.first_name = form.cleaned_data.get('first_name')
        patient.last_name = form.cleaned_data.get('last_name')
        patient.date_of_birth = form.cleaned_data.get('date_of_birth')
        patient.gender = form.cleaned_data.get('gender')
        patient.home_address = form.cleaned_data.get('home_address')
        patient.national_id = form.cleaned_data.get('national_id')
        patient.phone_number = form.cleaned_data.get('phone_number')
        patient.email_address = form.cleaned_data.get('email_address')
        patient.purpose_of_visit = form.cleaned_data.get('purpose_of_visit')
        patient.description_of_the_condition = form.cleaned_data.get('description_of_the_condition')
        patient.prescription = form.cleaned_data.get('prescription')
        patient.current_temperature = form.cleaned_data.get('current_temperature')
        patient.blood_type = form.cleaned_data.get('blood_type')
        patient.current_medication = form.cleaned_data.get('current_medication')
        patient.body_mass = form.cleaned_data.get('body_mass')
        patient.allergies = form.cleaned_data.get('allergies')
        patient.employment_status = form.cleaned_data.get('employment_status')
        patient.consulted_doctor = form.cleaned_data.get('consulted_doctor')
        patient.marital_status = form.cleaned_data.get('marital_status')
        patient.medical_aid_group = form.cleaned_data.get('medical_aid_group')
        patient.date_of_visit = form.cleaned_data.get('date_of_visit')
        #     )

        # def contact_snippet(request):
        #     form = ContactForm()
        #     if request.method == 'POST':
        #         form = ContactForm()
        #         if form.is_valid():
        #             contact = Contact.objects.create(
        #                 name = form.cleaned_data.get('name'),
        #                 subject = form.cleaned_data.get('subject'),
        #                 email = form.cleaned_data.get('email'),
        #                 category = form.cleaned_data.get('category'),
        #                 message = form.cleaned_data.get('message')
        #             )
        #
        #             contact.save()
        #
        #     form = ContactForm()
        #
        #     context = {
        #         'form' : form,
        #         'button' : 'Send Message',
        #         'project_name' : 'ProMed HealthNet Inc',
        #         'title' : 'Contact Us'
        #     }
        #
        #     return render(request, 'HealthNet/form.html', context)

        # @login_required
        # def edit(request, id=None, template_name='form.html'):
        #     if id:
        #         article = get_object_or_404(Patient, pk=id)
        #         if article.author != request.user:
        #             return HttpResponseForbidden()
        #     else:
        #         article = Article(author=request.user)
        #
        #     form = ArticleForm(request.POST or None, instance=article)
        #     if request.POST and form.is_valid():
        #         form.save()
        #
        #         # Save was successful, so redirect to another page
        #         redirect_url = reverse(article_save_success)
        #         return redirect(redirect_url)
        #
        #     return render(request, template_name, {
        #         'form': form
        #     })

        # Edit using update view

        # @login_required
        # class PatientFormUpdate(UpdateView):
        #     model = Patient
        #     fields = '__all__'
        #     template_name = '_update_form'
        #
        #
        # # Delete class
        # class PatientDelete(DeleteView):
        #     model = Patient
        #     success_url = reverse_lazy('HealthNet/form.html')
